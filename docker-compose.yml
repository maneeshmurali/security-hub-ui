

services:
  # Main Security Hub Application
  security-hub-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: security-hub-app
    restart: unless-stopped
    ports:
      - "${APP_PORT:-8000}:8000"
    environment:
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - DATABASE_URL=${DATABASE_URL:-sqlite:///./data/security_hub_findings.db}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME:-}
      - S3_PREFIX=${S3_PREFIX:-security-hub-findings/}
      - POLLING_INTERVAL_MINUTES=${POLLING_INTERVAL_MINUTES:-30}
      - HOST=0.0.0.0
      - PORT=8000
      - DEFAULT_SEVERITY_FILTER=${DEFAULT_SEVERITY_FILTER:-CRITICAL,HIGH,MEDIUM,LOW,INFORMATIONAL}
      - DEFAULT_STATUS_FILTER=${DEFAULT_STATUS_FILTER:-ACTIVE,SUPPRESSED}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
    networks:
      - security-hub-network
    healthcheck:
      test: ["CMD", "python3", "-c", "import urllib.request; urllib.request.urlopen('http://localhost:8000/api/stats')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis


  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: security-hub-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - security-hub-network
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3





volumes:
  redis_data:
    driver: local

networks:
  security-hub-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 