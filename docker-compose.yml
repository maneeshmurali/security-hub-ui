version: '3.8'

services:
  # Main Security Hub Application
  security-hub-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: security-hub-app
    restart: unless-stopped
    ports:
      - "${APP_PORT:-8000}:8000"
    environment:
      - AWS_REGION=${AWS_REGION:-us-east-1}
      - DATABASE_URL=${DATABASE_URL:-sqlite:///./data/security_hub_findings.db}
      - S3_BUCKET_NAME=${S3_BUCKET_NAME:-}
      - S3_PREFIX=${S3_PREFIX:-security-hub-findings/}
      - POLLING_INTERVAL_MINUTES=${POLLING_INTERVAL_MINUTES:-30}
      - HOST=0.0.0.0
      - PORT=8000
      - DEFAULT_SEVERITY_FILTER=${DEFAULT_SEVERITY_FILTER:-CRITICAL,HIGH,MEDIUM,LOW,INFORMATIONAL}
      - DEFAULT_STATUS_FILTER=${DEFAULT_STATUS_FILTER:-ACTIVE,SUPPRESSED}
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./config:/app/config
    networks:
      - security-hub-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/stats"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    depends_on:
      - redis
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.security-hub.rule=Host(`${DOMAIN:-localhost}`)"
      - "traefik.http.routers.security-hub.entrypoints=web"
      - "traefik.http.services.security-hub.loadbalancer.server.port=8000"

  # Redis for caching and session management
  redis:
    image: redis:7-alpine
    container_name: security-hub-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - security-hub-network
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx reverse proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: security-hub-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx
    networks:
      - security-hub-network
    depends_on:
      - security-hub-app
    profiles:
      - nginx

  # Traefik reverse proxy (alternative to nginx)
  traefik:
    image: traefik:v2.10
    container_name: security-hub-traefik
    restart: unless-stopped
    ports:
      - "${TRAEFIK_PORT:-8080}:8080"
      - "${TRAEFIK_HTTP_PORT:-80}:80"
      - "${TRAEFIK_HTTPS_PORT:-443}:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml:ro
      - ./traefik/dynamic.yml:/etc/traefik/dynamic.yml:ro
      - traefik_certs:/certs
      - traefik_logs:/var/log/traefik
    networks:
      - security-hub-network
    profiles:
      - traefik



volumes:
  redis_data:
    driver: local
  nginx_logs:
    driver: local
  traefik_certs:
    driver: local
  traefik_logs:
    driver: local

networks:
  security-hub-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 